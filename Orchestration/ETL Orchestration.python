{"version":"NotebookV1","origId":3406443095178977,"name":"ETL Orchestration","language":"python","commands":[{"version":"CommandV1","origId":3406443095178978,"guid":"7eaed965-5007-40e3-9532-522f327ff9a2","subtype":"command","commandType":"auto","position":1.0,"command":"%run \"./parallel-notebooks\"","commandVersion":0,"state":"finished","results":null,"errorSummary":"Notebook not found: parallel-notebooks. Notebooks can be specified via a relative path (./Notebook or ../folder/Notebook) or via an absolute path (/Abs/Path/to/Notebook). Make sure you are specifying the path correctly.\n\nStacktrace:\n  /Users/rakeshr@microsoft.com/notebooks/ETL Orchestration: python","error":null,"workflows":[],"startTime":1538074482815,"submitTime":1538074482815,"finishTime":1538074489319,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"rakeshr@microsoft.com","latestUserId":"1985061792949798","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"e21a4f08-01a1-436a-88a6-d6090aea6d38"},{"version":"CommandV1","origId":3406443095178979,"guid":"d391d0ca-b7ff-46d0-81d7-ba707679cca3","subtype":"script","commandType":"auto","position":1.3333333333333333,"command":"","commandVersion":1,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">import scala.concurrent.{Future, Await}\nimport scala.concurrent.duration._\nimport scala.util.control.NonFatal\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1538074483684,"submitTime":0,"finishTime":1538074487327,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":["7eaed965-5007-40e3-9532-522f327ff9a2"],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"0353ba48-7308-4d93-b973-5876a8037992"},{"version":"CommandV1","origId":3406443095178980,"guid":"efe441b1-6a0e-418e-a9cd-0309ca08e554","subtype":"script","commandType":"auto","position":1.6666666666666665,"command":"","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">defined class NotebookData\nparallelNotebooks: (notebooks: Seq[NotebookData])scala.concurrent.Future[Seq[String]]\nparallelNotebook: (notebook: NotebookData)scala.concurrent.Future[String]\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":null,"error":null,"workflows":[],"startTime":1538074487335,"submitTime":0,"finishTime":1538074489167,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":["7eaed965-5007-40e3-9532-522f327ff9a2"],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"aaa96470-1ac4-4ba9-af1d-703ed66d65ce"},{"version":"CommandV1","origId":3406443095178981,"guid":"9170b7e7-53d0-49bd-9ffb-3732e68f9c4e","subtype":"command","commandType":"auto","position":3.0,"command":"%scala\nimport scala.concurrent.Await\nimport scala.concurrent.duration._\nimport scala.language.postfixOps\n\nval notebooks = Seq(\n  NotebookData(\"Parallel Load\", 0, Map(\"FilePath\" -> \"dbfs:/mnt/blobstorage/stage/file001\")),\n  NotebookData(\"Parallel Load\", 0, Map(\"FilePath\" -> \"dbfs:/mnt/blobstorage/stage/file002\")),\n  NotebookData(\"Parallel Load\", 0, Map(\"FilePath\" -> \"dbfs:/mnt/blobstorage/stage/file003\")),\n  NotebookData(\"Parallel Load\", 0, Map(\"FilePath\" -> \"dbfs:/mnt/blobstorage/stage/file004\")),\n  NotebookData(\"Parallel Load\", 0, Map(\"FilePath\" -> \"dbfs:/mnt/blobstorage/stage/file005\")),\n  NotebookData(\"Parallel Load\", 0, Map(\"FilePath\" -> \"dbfs:/mnt/blobstorage/stage/file006\")),\n  NotebookData(\"Parallel Load\", 0, Map(\"FilePath\" -> \"dbfs:/mnt/blobstorage/stage/file007\")),\n  NotebookData(\"Parallel Load\", 0, Map(\"FilePath\" -> \"dbfs:/mnt/blobstorage/stage/file008\"))\n)\n\nval res = parallelNotebooks(notebooks)\n\nAwait.result(res, 40000 seconds) // wait for 10 hours\nres.value","commandVersion":0,"state":"finished","results":{"type":"html","data":"<div class=\"ansiout\">Warning: No value returned from the notebook run. To return a value from a notebook, use dbutils.notebook.exit(value)\nWarning: No value returned from the notebook run. To return a value from a notebook, use dbutils.notebook.exit(value)\nWarning: No value returned from the notebook run. To return a value from a notebook, use dbutils.notebook.exit(value)\nWarning: No value returned from the notebook run. To return a value from a notebook, use dbutils.notebook.exit(value)\nWarning: No value returned from the notebook run. To return a value from a notebook, use dbutils.notebook.exit(value)\nWarning: No value returned from the notebook run. To return a value from a notebook, use dbutils.notebook.exit(value)\nWarning: No value returned from the notebook run. To return a value from a notebook, use dbutils.notebook.exit(value)\nWarning: No value returned from the notebook run. To return a value from a notebook, use dbutils.notebook.exit(value)\nWarning: No value returned from the notebook run. To return a value from a notebook, use dbutils.notebook.exit(value)\nWarning: No value returned from the notebook run. To return a value from a notebook, use dbutils.notebook.exit(value)\nWarning: No value returned from the notebook run. To return a value from a notebook, use dbutils.notebook.exit(value)\nWarning: No value returned from the notebook run. To return a value from a notebook, use dbutils.notebook.exit(value)\nimport scala.concurrent.Await\nimport scala.concurrent.duration._\nimport scala.language.postfixOps\nnotebooks: Seq[NotebookData] = List(NotebookData(Parallel Load,0,Map(FilePath -&gt; dbfs:/mnt/blobstorage/stage/aus001/2018/05)), NotebookData(Parallel Load,0,Map(FilePath -&gt; dbfs:/mnt/blobstorage/stage/aus001/2018/06)), NotebookData(Parallel Load,0,Map(FilePath -&gt; dbfs:/mnt/blobstorage/stage/aus001/2018/07)), NotebookData(Parallel Load,0,Map(FilePath -&gt; dbfs:/mnt/blobstorage/stage/aus001/2018/08)), NotebookData(Parallel Load,0,Map(FilePath -&gt; dbfs:/mnt/blobstorage/stage/nlse05/2018/05)), NotebookData(Parallel Load,0,Map(FilePath -&gt; dbfs:/mnt/blobstorage/stage/nlse05/2018/06)), NotebookData(Parallel Load,0,Map(FilePath -&gt; dbfs:/mnt/blobstorage/stage/nlse05/2018/07)), NotebookData(Parallel Load,0,Map(FilePath -&gt; dbfs:/mnt/blobstorage/stage/nlse05/2018/08)), NotebookData(Parallel Load,0,Map(FilePath -&gt; dbfs:/mnt/blobstorage/stage/nzs014/2018/05)), NotebookData(Parallel Load,0,Map(FilePath -&gt; dbfs:/mnt/blobstorage/stage/nzs014/2018/06)), NotebookData(Parallel Load,0,Map(FilePath -&gt; dbfs:/mnt/blobstorage/stage/nzs014/2018/07)), NotebookData(Parallel Load,0,Map(FilePath -&gt; dbfs:/mnt/blobstorage/stage/nzs014/2018/08)))\nres: scala.concurrent.Future[Seq[String]] = Success(List(null, null, null, null, null, null, null, null, null, null, null, null))\nres0: Option[scala.util.Try[Seq[String]]] = Some(Success(List(null, null, null, null, null, null, null, null, null, null, null, null)))\n</div>","arguments":{},"addedWidgets":{},"removedWidgets":[],"datasetInfos":[]},"errorSummary":"java.util.concurrent.TimeoutException: Futures timed out after [300 seconds]","error":"<div class=\"ansiout\">\tat scala.concurrent.impl.Promise$DefaultPromise.ready(Promise.scala:219)\n\tat scala.concurrent.impl.Promise$DefaultPromise.result(Promise.scala:223)\n\tat scala.concurrent.Await$$anonfun$result$1.apply(package.scala:190)\n\tat scala.concurrent.BlockContext$DefaultBlockContext$.blockOn(BlockContext.scala:53)\n\tat scala.concurrent.Await$.result(package.scala:190)\n\tat line31a6c8e1fd2b480c9de8672d905e78bf29.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw$$iw.&lt;init&gt;(command-32333816544501:22)\n\tat line31a6c8e1fd2b480c9de8672d905e78bf29.$read$$iw$$iw$$iw$$iw$$iw$$iw$$iw.&lt;init&gt;(command-32333816544501:81)\n\tat line31a6c8e1fd2b480c9de8672d905e78bf29.$read$$iw$$iw$$iw$$iw$$iw$$iw.&lt;init&gt;(command-32333816544501:83)\n\tat line31a6c8e1fd2b480c9de8672d905e78bf29.$read$$iw$$iw$$iw$$iw$$iw.&lt;init&gt;(command-32333816544501:85)\n\tat line31a6c8e1fd2b480c9de8672d905e78bf29.$read$$iw$$iw$$iw$$iw.&lt;init&gt;(command-32333816544501:87)\n\tat line31a6c8e1fd2b480c9de8672d905e78bf29.$read$$iw$$iw$$iw.&lt;init&gt;(command-32333816544501:89)\n\tat line31a6c8e1fd2b480c9de8672d905e78bf29.$read$$iw$$iw.&lt;init&gt;(command-32333816544501:91)\n\tat line31a6c8e1fd2b480c9de8672d905e78bf29.$read$$iw.&lt;init&gt;(command-32333816544501:93)\n\tat line31a6c8e1fd2b480c9de8672d905e78bf29.$read.&lt;init&gt;(command-32333816544501:95)\n\tat line31a6c8e1fd2b480c9de8672d905e78bf29.$read$.&lt;init&gt;(command-32333816544501:99)\n\tat line31a6c8e1fd2b480c9de8672d905e78bf29.$read$.&lt;clinit&gt;(command-32333816544501)\n\tat line31a6c8e1fd2b480c9de8672d905e78bf29.$eval$.$print$lzycompute(&lt;notebook&gt;:7)\n\tat line31a6c8e1fd2b480c9de8672d905e78bf29.$eval$.$print(&lt;notebook&gt;:6)\n\tat line31a6c8e1fd2b480c9de8672d905e78bf29.$eval.$print(&lt;notebook&gt;)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat scala.tools.nsc.interpreter.IMain$ReadEvalPrint.call(IMain.scala:786)\n\tat scala.tools.nsc.interpreter.IMain$Request.loadAndRun(IMain.scala:1047)\n\tat scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:638)\n\tat scala.tools.nsc.interpreter.IMain$WrappedRequest$$anonfun$loadAndRunReq$1.apply(IMain.scala:637)\n\tat scala.reflect.internal.util.ScalaClassLoader$class.asContext(ScalaClassLoader.scala:31)\n\tat scala.reflect.internal.util.AbstractFileClassLoader.asContext(AbstractFileClassLoader.scala:19)\n\tat scala.tools.nsc.interpreter.IMain$WrappedRequest.loadAndRunReq(IMain.scala:637)\n\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:569)\n\tat scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:565)\n\tat com.databricks.backend.daemon.driver.DriverILoop.execute(DriverILoop.scala:199)\n\tat com.databricks.backend.daemon.driver.ScalaDriverLocal$$anonfun$repl$1.apply$mcV$sp(ScalaDriverLocal.scala:189)\n\tat com.databricks.backend.daemon.driver.ScalaDriverLocal$$anonfun$repl$1.apply(ScalaDriverLocal.scala:189)\n\tat com.databricks.backend.daemon.driver.ScalaDriverLocal$$anonfun$repl$1.apply(ScalaDriverLocal.scala:189)\n\tat com.databricks.backend.daemon.driver.DriverLocal$TrapExitInternal$.trapExit(DriverLocal.scala:493)\n\tat com.databricks.backend.daemon.driver.DriverLocal$TrapExit$.apply(DriverLocal.scala:448)\n\tat com.databricks.backend.daemon.driver.ScalaDriverLocal.repl(ScalaDriverLocal.scala:189)\n\tat com.databricks.backend.daemon.driver.DriverLocal$$anonfun$execute$3.apply(DriverLocal.scala:248)\n\tat com.databricks.backend.daemon.driver.DriverLocal$$anonfun$execute$3.apply(DriverLocal.scala:228)\n\tat com.databricks.logging.UsageLogging$$anonfun$withAttributionContext$1.apply(UsageLogging.scala:188)\n\tat scala.util.DynamicVariable.withValue(DynamicVariable.scala:58)\n\tat com.databricks.logging.UsageLogging$class.withAttributionContext(UsageLogging.scala:183)\n\tat com.databricks.backend.daemon.driver.DriverLocal.withAttributionContext(DriverLocal.scala:40)\n\tat com.databricks.logging.UsageLogging$class.withAttributionTags(UsageLogging.scala:221)\n\tat com.databricks.backend.daemon.driver.DriverLocal.withAttributionTags(DriverLocal.scala:40)\n\tat com.databricks.backend.daemon.driver.DriverLocal.execute(DriverLocal.scala:228)\n\tat com.databricks.backend.daemon.driver.DriverWrapper$$anonfun$tryExecutingCommand$2.apply(DriverWrapper.scala:595)\n\tat com.databricks.backend.daemon.driver.DriverWrapper$$anonfun$tryExecutingCommand$2.apply(DriverWrapper.scala:595)\n\tat scala.util.Try$.apply(Try.scala:192)\n\tat com.databricks.backend.daemon.driver.DriverWrapper.tryExecutingCommand(DriverWrapper.scala:590)\n\tat com.databricks.backend.daemon.driver.DriverWrapper.getCommandOutputAndError(DriverWrapper.scala:474)\n\tat com.databricks.backend.daemon.driver.DriverWrapper.executeCommand(DriverWrapper.scala:548)\n\tat com.databricks.backend.daemon.driver.DriverWrapper.runInnerLoop(DriverWrapper.scala:380)\n\tat com.databricks.backend.daemon.driver.DriverWrapper.runInner(DriverWrapper.scala:327)\n\tat com.databricks.backend.daemon.driver.DriverWrapper.run(DriverWrapper.scala:215)\n\tat java.lang.Thread.run(Thread.java:748)</div>","workflows":[{"jobId":23},{"jobId":22},{"jobId":21},{"jobId":24},{"jobId":25},{"jobId":26},{"jobId":27},{"jobId":28},{"jobId":29},{"jobId":30},{"jobId":31},{"jobId":32}],"startTime":1538074493717,"submitTime":1538074493660,"finishTime":1538076208207,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"rakeshr@microsoft.com","latestUserId":"1985061792949798","commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"b646af96-3bd2-416a-9cee-30d1e97799d6"},{"version":"CommandV1","origId":3406443095178982,"guid":"ea872019-7a3e-4d77-887f-e13665bb8a56","subtype":"command","commandType":"auto","position":4.0,"command":"","commandVersion":0,"state":"finished","results":null,"errorSummary":null,"error":null,"workflows":[],"startTime":0,"submitTime":0,"finishTime":0,"collapsed":false,"bindings":{},"inputWidgets":{},"displayType":"table","width":"auto","height":"auto","xColumns":null,"yColumns":null,"pivotColumns":null,"pivotAggregation":null,"customPlotOptions":{},"commentThread":[],"commentsVisible":false,"parentHierarchy":[],"diffInserts":[],"diffDeletes":[],"globalVars":{},"latestUser":"","latestUserId":null,"commandTitle":"","showCommandTitle":false,"hideCommandCode":false,"hideCommandResult":false,"iPythonMetadata":null,"streamStates":{},"datasetPreviewNameToCmdIdMap":{},"nuid":"18ea4c04-014c-4550-a858-545c83e943e6"}],"dashboards":[],"guid":"d9e63ed9-d5d8-4119-9aab-ab9d57b909fe","globalVars":{},"iPythonMetadata":null,"inputWidgets":{}}